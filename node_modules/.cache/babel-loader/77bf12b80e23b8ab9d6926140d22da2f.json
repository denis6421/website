{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/new-portolio/client/src/components/contact/parts/TextInput.jsx\";\nimport React, { Component } from \"react\";\nimport validator from \"validator\";\n\nconst validateData = (validation, value) => {\n  if (validation === \"email\") {\n    return !validator.isEmail(value);\n  }\n};\n\nclass TextInput extends Component {\n  constructor() {\n    super();\n\n    this.onFocus = () => {\n      this.setState({\n        active: true,\n        validation_error: false,\n        is_empty: false\n      });\n    };\n\n    this.onBlur = () => {\n      const _this$props = this.props,\n            value = _this$props.value,\n            validation_type = _this$props.validation_type;\n      this.setState({\n        active: value,\n        is_empty: !value\n      });\n      let validation_error = value ? validateData(validation_type, value) : \"\";\n      console.log(validation_error);\n      if (validation_error) this.setState({\n        validation_error: true\n      });\n    };\n\n    this.onChange = value => {\n      const property_name = this.props.property_name;\n      this.props.updateParent(property_name, value);\n    };\n\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.validate !== this.props.validate) {\n      this.onBlur();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          active = _this$state.active,\n          is_empty = _this$state.is_empty,\n          validation_error = _this$state.validation_error;\n    const _this$props2 = this.props,\n          value = _this$props2.value,\n          placeholder = _this$props2.placeholder,\n          required_error = _this$props2.required_error,\n          img = _this$props2.img,\n          validation_text = _this$props2.validation_text;\n    return React.createElement(\"div\", {\n      id: active ? \"contact__input--active\" : \"\",\n      className: \"contact__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, img, React.createElement(\"input\", {\n      value: value,\n      placeholder: placeholder,\n      onBlur: () => this.onBlur(),\n      onFocus: () => this.onFocus(),\n      onChange: e => this.onChange(e.target.value),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), is_empty ? React.createElement(\"h5\", {\n      className: \"contact__input__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, required_error) : validation_error ? React.createElement(\"h5\", {\n      className: \"contact__input__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, validation_text) : \"\");\n  }\n\n}\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/new-portolio/client/src/components/contact/parts/TextInput.jsx"],"names":["React","Component","validator","validateData","validation","value","isEmail","TextInput","constructor","onFocus","setState","active","validation_error","is_empty","onBlur","props","validation_type","console","log","onChange","property_name","updateParent","state","componentWillReceiveProps","nextProps","validate","render","placeholder","required_error","img","validation_text","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport validator from \"validator\";\n\nconst validateData = (validation, value) => {\n  if (validation === \"email\") {\n    return !validator.isEmail(value);\n  }\n};\n\nclass TextInput extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.validate !== this.props.validate) {\n      this.onBlur();\n    }\n  }\n  onFocus = () => {\n    this.setState({\n      active: true,\n      validation_error: false,\n      is_empty:false\n    });\n  };\n\n  onBlur = () => {\n    const { value, validation_type } = this.props;\n    this.setState({\n      active: value,\n      is_empty:!value\n    });\n    let validation_error = value ? validateData(validation_type, value) : \"\";\n    console.log(validation_error);\n    if (validation_error)\n      this.setState({\n        validation_error: true,\n      });\n  };\n\n  onChange = (value) => {\n    const { property_name } = this.props;\n    this.props.updateParent(property_name, value);\n  };\n  render() {\n    const { active, is_empty, validation_error } = this.state;\n    \n    const {\n      value,\n      placeholder,\n      required_error,\n      img,\n      validation_text,\n    } = this.props;\n    return (\n      <div\n        id={active ? \"contact__input--active\" : \"\"}\n        className=\"contact__input\"\n      >\n        {img}\n        <input\n          value={value}\n          placeholder={placeholder}\n          onBlur={() => this.onBlur()}\n          onFocus={() => this.onFocus()}\n          onChange={(e) => this.onChange(e.target.value)}\n          type=\"text\"\n        />\n        {is_empty ? (\n          <h5 className=\"contact__input__error\">{required_error}</h5>\n        ) : validation_error ? (\n          <h5 className=\"contact__input__error\">{validation_text}</h5>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}